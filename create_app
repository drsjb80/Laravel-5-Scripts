#! /bin/bash

function yn {
    local answer

    while true
    do
        echo -n $1
        read -p " y/n: " answer
        if [[ $answer == 'y' ]]
        then
            return 0
        elif [[ $answer == 'n' ]]
        then
            return 1
        fi
    done
}

if ! which laravel
then
    echo 'laravel not found'
    exit
fi

if ! which git
then
    echo 'git not found'
    exit
fi

if [[ $# = 0 ]]
then
    read -p  "---- Please enter the name of the application you want to create: " application
else
    application=$1
fi

# does the directory exist?
if [[ -d $application ]]
then
    if ! yn "---- Do you want to remove the existing application?"
    then
        exit
    fi

    echo "Attempting to reset all migrations"
    cd $application; php artisan migrate:reset; cd ..
    echo "Removing entire folder"
    rm -rf $application
fi

laravel new $application

cd $application
echo "Installing composer"
curl -sSk https://getcomposer.org/installer | php

echo "Installing doctrine/dbal"
php composer.phar require doctrine/dbal

echo "Installing laralib/l5scaffold"
php composer.phar require laralib/l5scaffold

echo "Installing laracasts/generators"
php composer.phar require laracasts/generators

echo "Installing laravelcollective/html"
php composer.phar require laravelcollective/html

echo "Patching config/app.php"
sed -e "/'providers'/a\\
        Laralib\\\L5scaffold\\\GeneratorsServiceProvider::class,\\
        Laracasts\\\Generators\\\GeneratorsServiceProvider::class,\\
        Collective\\\Html\\\HtmlServiceProvider::class,\\
" < config/app.php > tmp$$
mv tmp$$ config/app.php

echo "Patching .env"
cat .env.example | sed -e '/DB_HOST/,/DB_PASSWORD/d' -e 's/mysql/sqlite/' > .env

echo "Creating empty database"
touch database/database.sqlite

echo "Creating key"
php artisan key:generate

cat - << EOF > README
This directory now contains all you should need to get a Laravel
application running. It includes the scaffolding and database migration
commands. You don't need Apache (or similar) as 'php artisan serve' will
do, and you don't need MySQL (or similar) as SQLite3 will do.
EOF
